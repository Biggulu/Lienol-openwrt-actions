#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================
name: X64-Lean-OpenWrt-CI

on:
#  schedule:
#    - cron: 0 22 * * *
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          echo "Deleting files, please wait ..."
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/Lienol/lean-lede
        REPO_BRANCH: dev
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 添加主题
      working-directory: ./openwrt/package
      run: |
        git clone https://github.com/Kinodi/luci-theme-atmaterial.git openwrt-packages/luci-theme-atmaterial
        git clone https://github.com/rosywrt/luci-theme-rosy.git openwrt-packages/luci-theme-rosy
            
#    - name: Costom configure file
#      run: |
#          cd openwrt
#          rm -f .config
#          cp ../lean-lede-x64 .config

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'lean-lede-x64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig

    - name: Make download
      run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

    - name: Multi-thread compile
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

    - name: Single-thread compile
      if: failure()
      run: |
          cd openwrt
          make -j1 V=s

    - name: Assemble artifact
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*combined*vmdk*" | xargs -i mv -f {} ./artifact/

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt Ever
        path: openwrt/bin
